
@{
    ViewData["Title"] = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" data-rule-validCustomer="true" required type="text" value="" class="form-control" />
        </div>

    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie" data-rule-atleastOneMovieSelected="true" type="text" value="" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-3 col-sm-3">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>


    <button class="btn btn-primary">Submit</button>
</form>

@section Scripts
    {
    @{await Html.RenderPartialAsync("_ValIdationScriptsPartial");}
    <script>
        $(document).ready(function () {

            var vm = {
                movieIds: []
            };

            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/Customers?query=%QUERY',
                    wildcard: '%QUERY',
                    transform: function (response) {
                        return $.map(response,
                            function (customer) {
                                return {
                                    name: customer.firstName + " " + customer.lastName,
                                    customerId: customer.customerId
                                }
                            });
                    }
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            },
                {
                    name: 'customers',
                    display: 'name',
                    limit: 10, //For some reason default value will only displaying 1 result instead of 5.
                    source: customers
                }
            ).on("typeahead:select",
                function (e, customer) {
                    vm.customerId = customer.customerId;
                });


            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/Movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            },
                {
                    name: 'movies',
                    display: 'name',
                    limit: 10, //For some reason default value will only displaying 1 result instead of 5.
                    source: movies
                }
            ).on("typeahead:select",
                function (e, movie) {
                    $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");

                    $("#movie").typeahead("val", "");

                    vm.movieIds.push(movie.movieId);
                });

            $.validator.addMethod("validCustomer",
                function() {
                    return vm.customerId && vm.customerId !== 0;
                }, "Please select a valid customer.");

            $.validator.addMethod("atleastOneMovieSelected",
                function () {
                    return vm.movieIds.length > 0;
                }, "Please select atleast one movie.");

            var validator = $("#newRental").validate({
                submitHandler: function() {
                    $.ajax({
                            url: "/api/Rentals",
                            contentType: "application/json",
                            method: "post",
                            data: JSON.stringify(vm)
                        })
                        .done(function () {
                            toastr.success("Rentals successfully recorded");

                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();

                            vm = { movieIds: [] };
                            validator.resetForm();
                        })
                        .fail(function () {
                            toastr.error("Something unexpected happened");
                        });

                    return false;
                }
            });
        });
    </script>
}
